From 2265941527ffd9b1b29510d794b5091911803ef2 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:04:06 +0200
Subject: [PATCH 01/25] occ cmake patch

---
 cMake/FindOpenCasCade.cmake | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index fbcc262..d7bd7c4 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -6,6 +6,13 @@
 # OCC_LIBRARY_DIR    - where the OCC library directory can be found
 # OCC_LIBRARIES      - Link this to use OCC
 # OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework
+if(TRUE)
+	set(OCC_FOUND TRUE)
+	set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
+	set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
+	set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
+	set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
+else(True)
 
 # First try to find OpenCASCADE Community Edition
 if(NOT DEFINED OCE_DIR)
@@ -142,3 +149,5 @@ if(OCC_FOUND)
 else(OCC_FOUND)
   #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
 endif(OCC_FOUND)
+
+endif(True)
\ No newline at end of file
-- 
2.7.4


From 02314191698efc3d4cc41d2b32fe1b04d161e149 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:09:58 +0200
Subject: [PATCH 02/25] occ_cmake

---
 cMake/FindOpenCasCade.cmake | 275 ++++++++++++++++++++++----------------------
 1 file changed, 137 insertions(+), 138 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index d7bd7c4..7b763c2 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -6,148 +6,147 @@
 # OCC_LIBRARY_DIR    - where the OCC library directory can be found
 # OCC_LIBRARIES      - Link this to use OCC
 # OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework
-if(TRUE)
-	set(OCC_FOUND TRUE)
-	set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
-	set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
-	set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
-	set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
-else(True)
+set(OCC_FOUND TRUE)
+set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
+set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
+set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
+set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
 
-# First try to find OpenCASCADE Community Edition
-if(NOT DEFINED OCE_DIR)
-  # Check for OSX needs to come first because UNIX evaluates to true on OSX
-  if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-    if(DEFINED MACPORTS_PREFIX)
-      find_package(OCE QUIET HINTS ${MACPORTS_PREFIX}/Library/Frameworks)
-    elseif(DEFINED HOMEBREW_PREFIX)
-      find_package(OCE QUIET HINTS ${HOMEBREW_PREFIX}/Cellar/oce/*)
-    endif()
-  elseif(UNIX)
-    set(OCE_DIR "/usr/local/share/cmake/")
-  elseif(WIN32)
-    set(OCE_DIR "c:/OCE-0.4.0/share/cmake")
-  endif()
-endif()
 
-find_package(OCE QUIET)
-if(OCE_FOUND)
-  message(STATUS "-- OpenCASCADE Community Edition has been found.")
-  # Disable this define. For more details see bug #0001872
-  #add_definitions (-DHAVE_CONFIG_H)
-  set(OCC_INCLUDE_DIR ${OCE_INCLUDE_DIRS})
-  #set(OCC_LIBRARY_DIR ${OCE_LIBRARY_DIR})
-else(OCE_FOUND) #look for OpenCASCADE
-  if(WIN32)
-    if(CYGWIN OR MINGW)
-    FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-        /usr/include/opencascade
-        /usr/local/include/opencascade
-        /opt/opencascade/include
-        /opt/opencascade/inc
-      )
-      FIND_LIBRARY(OCC_LIBRARY TKernel
-        /usr/lib
-        /usr/local/lib
-        /opt/opencascade/lib
-      )
-    else(CYGWIN OR MINGW)
-    FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-        "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/include"
-      )
-      FIND_LIBRARY(OCC_LIBRARY TKernel
-        "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/lib"
-      )
-    endif(CYGWIN OR MINGW)
-  else(WIN32)
-    FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-      /usr/include/opencascade
-      /usr/local/include/opencascade
-      /opt/opencascade/include
-      /opt/opencascade/inc
-    )
-    FIND_LIBRARY(OCC_LIBRARY TKernel
-      /usr/lib
-      /usr/local/lib
-      /opt/opencascade/lib
-    )
-  endif(WIN32)
-  if(OCC_LIBRARY)
-    GET_FILENAME_COMPONENT(OCC_LIBRARY_DIR ${OCC_LIBRARY} PATH)
-    IF(NOT OCC_INCLUDE_DIR)
-      FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-        ${OCC_LIBRARY_DIR}/../inc
-      )
-    ENDIF()
-  endif(OCC_LIBRARY)
-endif(OCE_FOUND)
+# # First try to find OpenCASCADE Community Edition
+# if(NOT DEFINED OCE_DIR)
+#   # Check for OSX needs to come first because UNIX evaluates to true on OSX
+#   if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
+#     if(DEFINED MACPORTS_PREFIX)
+#       find_package(OCE QUIET HINTS ${MACPORTS_PREFIX}/Library/Frameworks)
+#     elseif(DEFINED HOMEBREW_PREFIX)
+#       find_package(OCE QUIET HINTS ${HOMEBREW_PREFIX}/Cellar/oce/*)
+#     endif()
+#   elseif(UNIX)
+#     set(OCE_DIR "/usr/local/share/cmake/")
+#   elseif(WIN32)
+#     set(OCE_DIR "c:/OCE-0.4.0/share/cmake")
+#   endif()
+# endif()
 
-if(OCC_INCLUDE_DIR)
-  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAJOR
-    REGEX "#define OCC_VERSION_MAJOR.*"
-  )
-  string(REGEX MATCH "[0-9]+" OCC_MAJOR ${OCC_MAJOR})
-  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MINOR
-    REGEX "#define OCC_VERSION_MINOR.*"
-  )
-  string(REGEX MATCH "[0-9]+" OCC_MINOR ${OCC_MINOR})
-  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAINT
-    REGEX "#define OCC_VERSION_MAINTENANCE.*"
-  )
-  string(REGEX MATCH "[0-9]+" OCC_MAINT ${OCC_MAINT})
+# find_package(OCE QUIET)
+# if(OCE_FOUND)
+#   message(STATUS "-- OpenCASCADE Community Edition has been found.")
+#   # Disable this define. For more details see bug #0001872
+#   #add_definitions (-DHAVE_CONFIG_H)
+#   set(OCC_INCLUDE_DIR ${OCE_INCLUDE_DIRS})
+#   #set(OCC_LIBRARY_DIR ${OCE_LIBRARY_DIR})
+# else(OCE_FOUND) #look for OpenCASCADE
+#   if(WIN32)
+#     if(CYGWIN OR MINGW)
+#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+#         /usr/include/opencascade
+#         /usr/local/include/opencascade
+#         /opt/opencascade/include
+#         /opt/opencascade/inc
+#       )
+#       FIND_LIBRARY(OCC_LIBRARY TKernel
+#         /usr/lib
+#         /usr/local/lib
+#         /opt/opencascade/lib
+#       )
+#     else(CYGWIN OR MINGW)
+#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+#         "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/include"
+#       )
+#       FIND_LIBRARY(OCC_LIBRARY TKernel
+#         "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/lib"
+#       )
+#     endif(CYGWIN OR MINGW)
+#   else(WIN32)
+#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+#       /usr/include/opencascade
+#       /usr/local/include/opencascade
+#       /opt/opencascade/include
+#       /opt/opencascade/inc
+#     )
+#     FIND_LIBRARY(OCC_LIBRARY TKernel
+#       /usr/lib
+#       /usr/local/lib
+#       /opt/opencascade/lib
+#     )
+#   endif(WIN32)
+#   if(OCC_LIBRARY)
+#     GET_FILENAME_COMPONENT(OCC_LIBRARY_DIR ${OCC_LIBRARY} PATH)
+#     IF(NOT OCC_INCLUDE_DIR)
+#       FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+#         ${OCC_LIBRARY_DIR}/../inc
+#       )
+#     ENDIF()
+#   endif(OCC_LIBRARY)
+# endif(OCE_FOUND)
 
-  set(OCC_VERSION_STRING "${OCC_MAJOR}.${OCC_MINOR}.${OCC_MAINT}")
-endif(OCC_INCLUDE_DIR)
+# if(OCC_INCLUDE_DIR)
+#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAJOR
+#     REGEX "#define OCC_VERSION_MAJOR.*"
+#   )
+#   string(REGEX MATCH "[0-9]+" OCC_MAJOR ${OCC_MAJOR})
+#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MINOR
+#     REGEX "#define OCC_VERSION_MINOR.*"
+#   )
+#   string(REGEX MATCH "[0-9]+" OCC_MINOR ${OCC_MINOR})
+#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAINT
+#     REGEX "#define OCC_VERSION_MAINTENANCE.*"
+#   )
+#   string(REGEX MATCH "[0-9]+" OCC_MAINT ${OCC_MAINT})
 
-# handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if
-# all listed variables are TRUE
-include(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(OCC REQUIRED_VARS OCC_INCLUDE_DIR VERSION_VAR OCC_VERSION_STRING)
+#   set(OCC_VERSION_STRING "${OCC_MAJOR}.${OCC_MINOR}.${OCC_MAINT}")
+# endif(OCC_INCLUDE_DIR)
 
-if(OCC_FOUND)
-  set(OCC_LIBRARIES
-    TKFillet
-    TKMesh
-    TKernel
-    TKG2d
-    TKG3d
-    TKMath
-    TKIGES
-    TKSTL
-    TKShHealing
-    TKXSBase
-    TKBin
-    TKBool
-    TKBO
-    TKCDF
-    TKBRep
-    TKTopAlgo
-    TKGeomAlgo
-    TKGeomBase
-    TKOffset
-    TKPrim
-    TKSTEP
-    TKSTEPBase
-    TKSTEPAttr
-    TKHLR
-    TKFeat
-  )
-  set(OCC_OCAF_LIBRARIES
-    TKCAF
-    TKXCAF
-    TKLCAF
-    TKXDESTEP
-    TKXDEIGES
-    TKMeshVS
-  )
-  if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-    list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
-  endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-  message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
-  message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
-  message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
-else(OCC_FOUND)
-  #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
-endif(OCC_FOUND)
+# # handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if
+# # all listed variables are TRUE
+# include(FindPackageHandleStandardArgs)
+# FIND_PACKAGE_HANDLE_STANDARD_ARGS(OCC REQUIRED_VARS OCC_INCLUDE_DIR VERSION_VAR OCC_VERSION_STRING)
 
-endif(True)
\ No newline at end of file
+# if(OCC_FOUND)
+#   set(OCC_LIBRARIES
+#     TKFillet
+#     TKMesh
+#     TKernel
+#     TKG2d
+#     TKG3d
+#     TKMath
+#     TKIGES
+#     TKSTL
+#     TKShHealing
+#     TKXSBase
+#     TKBin
+#     TKBool
+#     TKBO
+#     TKCDF
+#     TKBRep
+#     TKTopAlgo
+#     TKGeomAlgo
+#     TKGeomBase
+#     TKOffset
+#     TKPrim
+#     TKSTEP
+#     TKSTEPBase
+#     TKSTEPAttr
+#     TKHLR
+#     TKFeat
+#   )
+#   set(OCC_OCAF_LIBRARIES
+#     TKCAF
+#     TKXCAF
+#     TKLCAF
+#     TKXDESTEP
+#     TKXDEIGES
+#     TKMeshVS
+#   )
+#   if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+#     list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
+#   endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+#   message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
+#   message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
+#   message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
+# else(OCC_FOUND)
+#   #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
+# endif(OCC_FOUND)
+
+# endif(True)
-- 
2.7.4


From 4024c6dd22b89faa63e699d7b6542a7922bdbfbb Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:40:11 +0200
Subject: [PATCH 03/25] patch

---
 cMake/FindOpenCasCade.cmake | 92 ++++++++++++++++++++++-----------------------
 1 file changed, 45 insertions(+), 47 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index 7b763c2..2bb42af 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -103,50 +103,48 @@ set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
 # include(FindPackageHandleStandardArgs)
 # FIND_PACKAGE_HANDLE_STANDARD_ARGS(OCC REQUIRED_VARS OCC_INCLUDE_DIR VERSION_VAR OCC_VERSION_STRING)
 
-# if(OCC_FOUND)
-#   set(OCC_LIBRARIES
-#     TKFillet
-#     TKMesh
-#     TKernel
-#     TKG2d
-#     TKG3d
-#     TKMath
-#     TKIGES
-#     TKSTL
-#     TKShHealing
-#     TKXSBase
-#     TKBin
-#     TKBool
-#     TKBO
-#     TKCDF
-#     TKBRep
-#     TKTopAlgo
-#     TKGeomAlgo
-#     TKGeomBase
-#     TKOffset
-#     TKPrim
-#     TKSTEP
-#     TKSTEPBase
-#     TKSTEPAttr
-#     TKHLR
-#     TKFeat
-#   )
-#   set(OCC_OCAF_LIBRARIES
-#     TKCAF
-#     TKXCAF
-#     TKLCAF
-#     TKXDESTEP
-#     TKXDEIGES
-#     TKMeshVS
-#   )
-#   if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-#     list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
-#   endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-#   message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
-#   message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
-#   message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
-# else(OCC_FOUND)
-#   #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
-# endif(OCC_FOUND)
-
-# endif(True)
+if(OCC_FOUND)
+  set(OCC_LIBRARIES
+    TKFillet
+    TKMesh
+    TKernel
+    TKG2d
+    TKG3d
+    TKMath
+    TKIGES
+    TKSTL
+    TKShHealing
+    TKXSBase
+    TKBin
+    TKBool
+    TKBO
+    TKCDF
+    TKBRep
+    TKTopAlgo
+    TKGeomAlgo
+    TKGeomBase
+    TKOffset
+    TKPrim
+    TKSTEP
+    TKSTEPBase
+    TKSTEPAttr
+    TKHLR
+    TKFeat
+  )
+  set(OCC_OCAF_LIBRARIES
+    TKCAF
+    TKXCAF
+    TKLCAF
+    TKXDESTEP
+    TKXDEIGES
+    TKMeshVS
+  )
+  if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+    list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
+  endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+  message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
+  message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
+  message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
+else(OCC_FOUND)
+  #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
+endif(OCC_FOUND)
-- 
2.7.4


From 39920d0b7f11ecbb8d8decb34519c4f4524a64b4 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:42:06 +0200
Subject: [PATCH 04/25] patch

---
 cMake/FindOpenCasCade.cmake | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index 2bb42af..e353b1b 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -7,10 +7,10 @@
 # OCC_LIBRARIES      - Link this to use OCC
 # OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework
 set(OCC_FOUND TRUE)
-set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
-set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
-set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
-set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
+set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/../include/opencascade)
+set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/../lib)
+set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/../lib)
+set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/../lib)
 
 
 # # First try to find OpenCASCADE Community Edition
-- 
2.7.4


From 7e9e03dae0731c56652dc8d34b48c9fdeb77b3af Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:47:24 +0200
Subject: [PATCH 05/25] patch

---
 cMake/FindOpenCasCade.cmake | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index e353b1b..2bb42af 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -7,10 +7,10 @@
 # OCC_LIBRARIES      - Link this to use OCC
 # OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework
 set(OCC_FOUND TRUE)
-set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/../include/opencascade)
-set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/../lib)
-set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/../lib)
-set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/../lib)
+set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
+set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
+set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
+set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
 
 
 # # First try to find OpenCASCADE Community Edition
-- 
2.7.4


From 2d657cfc990e97310f3f42244bd57fd7c1ec1951 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:57:19 +0200
Subject: [PATCH 06/25] patch

---
 cMake/FindOpenCasCade.cmake | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index 2bb42af..2daf0c2 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -139,9 +139,9 @@ if(OCC_FOUND)
     TKXDEIGES
     TKMeshVS
   )
-  if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-    list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
-  endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+  # if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+  #   list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
+  # endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
   message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
   message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
   message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
-- 
2.7.4


From 9948635c3a5fb53a95bd5490b58582cabb9ef686 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 16 Aug 2016 15:59:54 +0200
Subject: [PATCH 07/25] patch

---
 cMake/FindOpenCasCade.cmake | 44 ++++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index 2daf0c2..ff46bd5 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -81,27 +81,27 @@ set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
 #   endif(OCC_LIBRARY)
 # endif(OCE_FOUND)
 
-# if(OCC_INCLUDE_DIR)
-#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAJOR
-#     REGEX "#define OCC_VERSION_MAJOR.*"
-#   )
-#   string(REGEX MATCH "[0-9]+" OCC_MAJOR ${OCC_MAJOR})
-#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MINOR
-#     REGEX "#define OCC_VERSION_MINOR.*"
-#   )
-#   string(REGEX MATCH "[0-9]+" OCC_MINOR ${OCC_MINOR})
-#   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAINT
-#     REGEX "#define OCC_VERSION_MAINTENANCE.*"
-#   )
-#   string(REGEX MATCH "[0-9]+" OCC_MAINT ${OCC_MAINT})
+if(OCC_INCLUDE_DIR)
+  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAJOR
+    REGEX "#define OCC_VERSION_MAJOR.*"
+  )
+  string(REGEX MATCH "[0-9]+" OCC_MAJOR ${OCC_MAJOR})
+  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MINOR
+    REGEX "#define OCC_VERSION_MINOR.*"
+  )
+  string(REGEX MATCH "[0-9]+" OCC_MINOR ${OCC_MINOR})
+  file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAINT
+    REGEX "#define OCC_VERSION_MAINTENANCE.*"
+  )
+  string(REGEX MATCH "[0-9]+" OCC_MAINT ${OCC_MAINT})
 
-#   set(OCC_VERSION_STRING "${OCC_MAJOR}.${OCC_MINOR}.${OCC_MAINT}")
-# endif(OCC_INCLUDE_DIR)
+  set(OCC_VERSION_STRING "${OCC_MAJOR}.${OCC_MINOR}.${OCC_MAINT}")
+endif(OCC_INCLUDE_DIR)
 
-# # handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if
-# # all listed variables are TRUE
-# include(FindPackageHandleStandardArgs)
-# FIND_PACKAGE_HANDLE_STANDARD_ARGS(OCC REQUIRED_VARS OCC_INCLUDE_DIR VERSION_VAR OCC_VERSION_STRING)
+# handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if
+# all listed variables are TRUE
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(OCC REQUIRED_VARS OCC_INCLUDE_DIR VERSION_VAR OCC_VERSION_STRING)
 
 if(OCC_FOUND)
   set(OCC_LIBRARIES
@@ -139,9 +139,9 @@ if(OCC_FOUND)
     TKXDEIGES
     TKMeshVS
   )
-  # if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
-  #   list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
-  # endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+  if(OCC_VERSION_STRING VERSION_LESS 6.7.3)
+    list(APPEND OCC_OCAF_LIBRARIES TKAdvTools)
+  endif(OCC_VERSION_STRING VERSION_LESS 6.7.3)
   message(STATUS "-- Found OCE/OpenCASCADE version: ${OCC_VERSION_STRING}")
   message(STATUS "-- OCE/OpenCASCADE include directory: ${OCC_INCLUDE_DIR}")
   message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
-- 
2.7.4


From ba877bb0d117205944adace2cd3f7c666b05a889 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Wed, 17 Aug 2016 13:29:54 +0200
Subject: [PATCH 08/25] netgen 6 shared pointer

---
 cMake/FindNETGEN.cmake                             |  6 +++
 .../src/NETGENPlugin/NETGENPlugin_Mesher.cpp       | 43 +++++++++++++++++-----
 .../NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp   |  6 ++-
 3 files changed, 45 insertions(+), 10 deletions(-)

diff --git a/cMake/FindNETGEN.cmake b/cMake/FindNETGEN.cmake
index 3bdc832..e150625 100644
--- a/cMake/FindNETGEN.cmake
+++ b/cMake/FindNETGEN.cmake
@@ -82,6 +82,10 @@ ELSE(DEFINED MACPORTS_PREFIX OR DEFINED HOMEBREW_PREFIX)
 
 ENDIF(DEFINED MACPORTS_PREFIX OR DEFINED HOMEBREW_PREFIX)
 
+MESSAGE( STATUS "NETGEN_INCLUDEDIR ${NETGEN_INCLUDEDIR}")
+MESSAGE( STATUS "NGLIB_INCLUDE_DIR ${NGLIB_INCLUDE_DIR}")
+MESSAGE( STATUS "NETGENDATA ${NETGENDATA}")
+
 FIND_PATH(NETGEN_DIR_include NAMES mydefs.hpp     PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/include)
 FIND_PATH(NETGEN_DIR_csg     NAMES csg.hpp        PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/csg)
 FIND_PATH(NETGEN_DIR_gen     NAMES array.hpp      PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/general)
@@ -117,6 +121,8 @@ IF(NGLIB_INCLUDE_DIR AND NGLIB_LIBRARIES)
       ${NETGEN_DIR_occ} ${NETGEN_DIR_stlgeom})
     LIST(REMOVE_DUPLICATES NETGEN_INCLUDE_DIRS)
     MESSAGE(STATUS "Found NETGEN version ${NETGEN_VERSION}")
+    MESSAGE(STATUS "NGLIB_LIBRARIES ${NGLIB_LIBRARIES}")
+    MESSAGE(STATUS "NGLIB_INCLUDE_DIR ${NGLIB_INCLUDE_DIR}")
     LIST(APPEND NETGEN_DEFINITIONS -DNETGEN_VERSION=${NETGEN_VERSION})
 ELSE()
     SET(NETGEN_FOUND FALSE)
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index b33ca15..342c2da 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2501,7 +2501,10 @@ bool NETGENPlugin_Mesher::Compute()
     try
     {
       OCC_CATCH_SIGNALS;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
       err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
       err = netgen::OCCGenerateMesh(occgeo, _ngMesh, startWith, endWith, optstr);
@@ -2589,7 +2592,11 @@ bool NETGENPlugin_Mesher::Compute()
         //OCCSetLocalMeshSize(intOccgeo, *_ngMesh); it deletes _ngMesh->localH
 
         // let netgen create a temporary mesh
-#if NETGEN_VERSION > 4
+
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
+        err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
         netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
 #else
         netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, startWith, endWith, optstr);
@@ -2602,7 +2609,10 @@ bool NETGENPlugin_Mesher::Compute()
 
         // compute mesh on internal edges
         startWith = endWith = netgen::MESHCONST_MESHEDGES;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
+        err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
 #else
         err = netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, startWith, endWith, optstr);
@@ -2643,7 +2653,10 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, startWith, endWith, optstr);
@@ -2753,7 +2766,10 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, startWith, endWith, optstr);
@@ -2855,7 +2871,10 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, startWith, endWith, optstr);
@@ -2887,7 +2906,10 @@ bool NETGENPlugin_Mesher::Compute()
         try
         {
           OCC_CATCH_SIGNALS;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh)
+        err = netgen::OCCGenerateMesh(occgeo, std::shared_ptr<netgen::Mesh>(_ngMesh), mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, startWith, endWith, optstr);
@@ -3109,7 +3131,10 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
 #endif
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
+#elif NETGEN_VERSION > 4
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, mparams, startWith, endWith);
 #else
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, startWith, endWith, optstr);
@@ -3118,7 +3143,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   if(netgen::multithread.terminate)
     return false;
 
-  ngLib.setMesh(( Ng_Mesh*) ngMesh );
+  ngLib.setMesh(( Ng_Mesh*) ngMesh.get() );
   if (err) {
     if ( SMESH_subMesh* sm = _mesh->GetSubMeshContaining( _shape ))
       sm->GetComputeError().reset( new SMESH_ComputeError( COMPERR_ALGO_FAILED ));
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index 9b6beec..ec548b8 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -47,6 +47,7 @@
 #include <utilities.h>
 
 #include <list>
+#include <memory>
 #include <vector>
 #include <limits>
 
@@ -474,7 +475,10 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
       try {
         OCC_CATCH_SIGNALS;
 
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
+#elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeom, ngMesh, netgen::mparam, startWith, endWith);
 #else
         char *optstr = 0;
-- 
2.7.4


From d095495f93d017a5c90f7bcfe8a19fc3e217f307 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Wed, 17 Aug 2016 22:12:09 +0200
Subject: [PATCH 09/25] fix

---
 cMake/FindNETGEN.cmake                                     |  6 ++----
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp   | 14 +++++++-------
 2 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/cMake/FindNETGEN.cmake b/cMake/FindNETGEN.cmake
index e150625..69fa526 100644
--- a/cMake/FindNETGEN.cmake
+++ b/cMake/FindNETGEN.cmake
@@ -82,10 +82,6 @@ ELSE(DEFINED MACPORTS_PREFIX OR DEFINED HOMEBREW_PREFIX)
 
 ENDIF(DEFINED MACPORTS_PREFIX OR DEFINED HOMEBREW_PREFIX)
 
-MESSAGE( STATUS "NETGEN_INCLUDEDIR ${NETGEN_INCLUDEDIR}")
-MESSAGE( STATUS "NGLIB_INCLUDE_DIR ${NGLIB_INCLUDE_DIR}")
-MESSAGE( STATUS "NETGENDATA ${NETGENDATA}")
-
 FIND_PATH(NETGEN_DIR_include NAMES mydefs.hpp     PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/include)
 FIND_PATH(NETGEN_DIR_csg     NAMES csg.hpp        PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/csg)
 FIND_PATH(NETGEN_DIR_gen     NAMES array.hpp      PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/general)
@@ -123,6 +119,8 @@ IF(NGLIB_INCLUDE_DIR AND NGLIB_LIBRARIES)
     MESSAGE(STATUS "Found NETGEN version ${NETGEN_VERSION}")
     MESSAGE(STATUS "NGLIB_LIBRARIES ${NGLIB_LIBRARIES}")
     MESSAGE(STATUS "NGLIB_INCLUDE_DIR ${NGLIB_INCLUDE_DIR}")
+    MESSAGE(STATUS "NETGEN_INCLUDE_DIRS ${NETGEN_INCLUDE_DIRS}")
+    MESSAGE(STATUS "NETGEN_DEFINITIONS ${NETGEN_DEFINITIONS}")
     LIST(APPEND NETGEN_DEFINITIONS -DNETGEN_VERSION=${NETGEN_VERSION})
 ELSE()
     SET(NETGEN_FOUND FALSE)
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 342c2da..362e231 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2610,7 +2610,6 @@ bool NETGENPlugin_Mesher::Compute()
         // compute mesh on internal edges
         startWith = endWith = netgen::MESHCONST_MESHEDGES;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
@@ -2632,7 +2631,7 @@ bool NETGENPlugin_Mesher::Compute()
       err = ( err || !comment.empty() );
 
 #if NETGEN_VERSION > 5
-      tmpNgMesh.reset();
+      nglib::Ng_DeleteMesh((nglib::Ng_Mesh*)tmpNgMesh);
 #else
       nglib::Ng_DeleteMesh((nglib::Ng_Mesh*)tmpNgMesh);
 #endif
@@ -2907,8 +2906,8 @@ bool NETGENPlugin_Mesher::Compute()
         {
           OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh)
-        err = netgen::OCCGenerateMesh(occgeo, std::shared_ptr<netgen::Mesh>(_ngMesh), mparams, startWith, endWith);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
 #else
@@ -3133,7 +3132,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   int endWith   = netgen::MESHCONST_MESHEDGES;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
-        err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
+        int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, mparams, startWith, endWith);
 #else
@@ -4014,7 +4013,7 @@ NETGENPlugin_NetgenLibWrapper::NETGENPlugin_NetgenLibWrapper()
 NETGENPlugin_NetgenLibWrapper::~NETGENPlugin_NetgenLibWrapper()
 {
 #if NETGEN_VERSION > 5
-  _ngMesh.reset();
+  Ng_DeleteMesh( _ngMesh );
 #else
   Ng_DeleteMesh( _ngMesh );
 #endif
@@ -4038,7 +4037,8 @@ void NETGENPlugin_NetgenLibWrapper::setMesh( Ng_Mesh* mesh )
 {
   if ( _ngMesh )
 #if NETGEN_VERSION > 5
-    _ngMesh.reset(mesh);
+    Ng_DeleteMesh( _ngMesh );
+  _ngMesh = mesh;
 #else
     Ng_DeleteMesh( _ngMesh );
   _ngMesh = mesh;
-- 
2.7.4


From 7e059ea4e17d50dcea0ce7d40bfc5e5069dfcdfd Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 16:41:49 +0200
Subject: [PATCH 10/25] some messages for cmake

---
 cMake/FindNETGEN.cmake | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/cMake/FindNETGEN.cmake b/cMake/FindNETGEN.cmake
index 69fa526..5cacffa 100644
--- a/cMake/FindNETGEN.cmake
+++ b/cMake/FindNETGEN.cmake
@@ -92,6 +92,8 @@ FIND_PATH(NETGEN_DIR_mesh    NAMES meshing.hpp    PATHS ${NETGEN_INCLUDEDIR} ${N
 FIND_PATH(NETGEN_DIR_occ     NAMES occgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/occ)
 FIND_PATH(NETGEN_DIR_stlgeom NAMES stlgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/stlgeom)
 
+MESSAGE(NETGEN_DIR_include)
+
 IF(NOT NGLIB_INCLUDE_DIR AND NOT NETGEN_DIR_include)
     MESSAGE(STATUS "Cannot find NETGEN header files.")
 ELSE()
-- 
2.7.4


From f9c46c505b7bc48465acb617aadbdedddc837d32 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 16:42:34 +0200
Subject: [PATCH 11/25] messages for cmake

---
 cMake/FindNETGEN.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cMake/FindNETGEN.cmake b/cMake/FindNETGEN.cmake
index 5cacffa..3a4987f 100644
--- a/cMake/FindNETGEN.cmake
+++ b/cMake/FindNETGEN.cmake
@@ -92,7 +92,7 @@ FIND_PATH(NETGEN_DIR_mesh    NAMES meshing.hpp    PATHS ${NETGEN_INCLUDEDIR} ${N
 FIND_PATH(NETGEN_DIR_occ     NAMES occgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/occ)
 FIND_PATH(NETGEN_DIR_stlgeom NAMES stlgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/stlgeom)
 
-MESSAGE(NETGEN_DIR_include)
+MESSAGE(ERROR NETGEN_DIR_include)
 
 IF(NOT NGLIB_INCLUDE_DIR AND NOT NETGEN_DIR_include)
     MESSAGE(STATUS "Cannot find NETGEN header files.")
-- 
2.7.4


From ddf25ed452c1776e073a366ac8f323a432943275 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 16:45:42 +0200
Subject: [PATCH 12/25] netgen patch

---
 cMake/FindNETGEN.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cMake/FindNETGEN.cmake b/cMake/FindNETGEN.cmake
index 3a4987f..383e799 100644
--- a/cMake/FindNETGEN.cmake
+++ b/cMake/FindNETGEN.cmake
@@ -92,7 +92,7 @@ FIND_PATH(NETGEN_DIR_mesh    NAMES meshing.hpp    PATHS ${NETGEN_INCLUDEDIR} ${N
 FIND_PATH(NETGEN_DIR_occ     NAMES occgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/occ)
 FIND_PATH(NETGEN_DIR_stlgeom NAMES stlgeom.hpp    PATHS ${NETGEN_INCLUDEDIR} ${NGLIB_INCLUDE_DIR} ${NETGENDATA}/stlgeom)
 
-MESSAGE(ERROR NETGEN_DIR_include)
+MESSAGE(WARNING NETGEN_DIR_include)
 
 IF(NOT NGLIB_INCLUDE_DIR AND NOT NETGEN_DIR_include)
     MESSAGE(STATUS "Cannot find NETGEN header files.")
-- 
2.7.4


From 7411f71210fd6af1090166cf086c3e62472b9b9f Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 17:33:22 +0200
Subject: [PATCH 13/25] OCCGENERATEMESH

---
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp        | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index d4600a1..8d7bf03 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -75,6 +75,8 @@ namespace nglib {
 #include <nglib.h>
 }
 namespace netgen {
+#if NETGEN_VERSION > 5
+  DLL_HEADER extern int OCCGenerateMesh (OCCGeometry&, shared_ptr<Mesh>&, MeshingParameters&, int, int);
 #if NETGEN_VERSION > 4
   DLL_HEADER extern int OCCGenerateMesh (OCCGeometry&, Mesh*&, MeshingParameters&, int, int);
 #else
@@ -470,7 +472,10 @@ bool NETGENPlugin_NETGEN_3D::compute(SMESH_Mesh&                     aMesh,
   {
     OCC_CATCH_SIGNALS;
 
-#if NETGEN_VERSION > 4
+#if NETGEN_VERSION >=6
+    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+    err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, netgen::mparam, startWith, endWith);
+#elif NETGEN_VERSION > 4
     ngMesh->CalcLocalH(netgen::mparam.grading);
     err = netgen::OCCGenerateMesh(occgeo, ngMesh, netgen::mparam, startWith, endWith);
 #else
-- 
2.7.4


From 8b7520f5ecd55683985f6a4698a00ac117d6b814 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 17:54:05 +0200
Subject: [PATCH 14/25] netgen

---
 src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index 8d7bf03..f53751d 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -77,7 +77,7 @@ namespace nglib {
 namespace netgen {
 #if NETGEN_VERSION > 5
   DLL_HEADER extern int OCCGenerateMesh (OCCGeometry&, shared_ptr<Mesh>&, MeshingParameters&, int, int);
-#if NETGEN_VERSION > 4
+#elif NETGEN_VERSION > 4
   DLL_HEADER extern int OCCGenerateMesh (OCCGeometry&, Mesh*&, MeshingParameters&, int, int);
 #else
   DLL_HEADER extern int OCCGenerateMesh (OCCGeometry&, Mesh*&, int, int, char*);
-- 
2.7.4


From 8c3e75ddc08354ad41ab28e1a50300675b5f270c Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Sun, 4 Sep 2016 20:53:18 +0200
Subject: [PATCH 15/25] netgen

---
 src/Mod/Fem/App/CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/Mod/Fem/App/CMakeLists.txt b/src/Mod/Fem/App/CMakeLists.txt
index 89989fb..2c129e3 100755
--- a/src/Mod/Fem/App/CMakeLists.txt
+++ b/src/Mod/Fem/App/CMakeLists.txt
@@ -22,6 +22,7 @@ include_directories(
     ${XercesC_INCLUDE_DIRS}
     ${SMESH_INCLUDE_DIR}
     ${VTK_INCLUDE_DIR}
+    ${NETGEN_INCLUDE_DIRS}
 )
 
 link_directories(${OCC_LIBRARY_DIR})
-- 
2.7.4


From 613e684c599631ff878f9dd44c8f98a7ec30bc32 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Mon, 5 Sep 2016 21:24:40 +0200
Subject: [PATCH 16/25] netgen: shared_ptr prevent from deletion

---
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp   | 14 +++++++-------
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp       |  2 +-
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp            |  2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 362e231..84809a8 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2502,7 +2502,7 @@ bool NETGENPlugin_Mesher::Compute()
     {
       OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
       err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2594,7 +2594,7 @@ bool NETGENPlugin_Mesher::Compute()
         // let netgen create a temporary mesh
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
@@ -2653,7 +2653,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2766,7 +2766,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2871,7 +2871,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2906,7 +2906,7 @@ bool NETGENPlugin_Mesher::Compute()
         {
           OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -3131,7 +3131,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
         int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, mparams, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index ec548b8..4ddc4c4 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -476,7 +476,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
         OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeom, ngMesh, netgen::mparam, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index f53751d..c20531f 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -473,7 +473,7 @@ bool NETGENPlugin_NETGEN_3D::compute(SMESH_Mesh&                     aMesh,
     OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
     err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
     ngMesh->CalcLocalH(netgen::mparam.grading);
-- 
2.7.4


From 35d655b6545f78859760224e63625ef49313f667 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 6 Sep 2016 12:37:19 +0200
Subject: [PATCH 17/25] netgen_tests

---
 .../src/NETGENPlugin/NETGENPlugin_Mesher.cpp           | 18 +++++++++++-------
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_2D.cpp        |  2 ++
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp   |  4 +++-
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp        |  2 +-
 4 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 84809a8..36e4b98 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -66,6 +66,8 @@
 #include <TopTools_MapOfShape.hxx>
 #include <TopoDS.hxx>
 
+#include <iostream>
+
 #ifdef _MSC_VER
 #pragma warning(disable : 4067)
 #endif
@@ -2413,6 +2415,8 @@ namespace
 
 bool NETGENPlugin_Mesher::Compute()
 {
+  std::cout << "USING MESHER" << std::endl;
+  exit(0);
   NETGENPlugin_NetgenLibWrapper ngLib;
 
   netgen::MeshingParameters& mparams = netgen::mparam;
@@ -2502,7 +2506,7 @@ bool NETGENPlugin_Mesher::Compute()
     {
       OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
       err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2594,7 +2598,7 @@ bool NETGENPlugin_Mesher::Compute()
         // let netgen create a temporary mesh
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
@@ -2653,7 +2657,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2766,7 +2770,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
         err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2871,7 +2875,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2906,7 +2910,7 @@ bool NETGENPlugin_Mesher::Compute()
         {
           OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -3131,7 +3135,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
         int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, mparams, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D.cpp
index 6e52d3e..f1a6693 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D.cpp
@@ -46,6 +46,8 @@ namespace nglib {
 }
 #include <meshing.hpp>
 
+#include <iostream>
+
 using namespace std;
 
 //=============================================================================
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index 4ddc4c4..b50ab64 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -233,6 +233,8 @@ namespace
 bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
                                           const TopoDS_Shape& aShape)
 {
+  std::cout << "USING NETGEN2SONLY" << std::endl;
+  exit(0);
   netgen::multithread.terminate = 0;
   //netgen::multithread.task = "Surface meshing";
 
@@ -476,7 +478,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
         OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
         err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeom, ngMesh, netgen::mparam, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index c20531f..f53751d 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -473,7 +473,7 @@ bool NETGENPlugin_NETGEN_3D::compute(SMESH_Mesh&                     aMesh,
     OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
+    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
     err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
     ngMesh->CalcLocalH(netgen::mparam.grading);
-- 
2.7.4


From c2d766d3ce719a4f57055be1b159faa1e1c6b538 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 6 Sep 2016 16:37:44 +0200
Subject: [PATCH 18/25] tests

---
 src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp   | 6 +-----
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp    | 4 +---
 2 files changed, 2 insertions(+), 8 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 36e4b98..7b68f42 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -66,8 +66,6 @@
 #include <TopTools_MapOfShape.hxx>
 #include <TopoDS.hxx>
 
-#include <iostream>
-
 #ifdef _MSC_VER
 #pragma warning(disable : 4067)
 #endif
@@ -2415,8 +2413,6 @@ namespace
 
 bool NETGENPlugin_Mesher::Compute()
 {
-  std::cout << "USING MESHER" << std::endl;
-  exit(0);
   NETGENPlugin_NetgenLibWrapper ngLib;
 
   netgen::MeshingParameters& mparams = netgen::mparam;
@@ -2506,7 +2502,7 @@ bool NETGENPlugin_Mesher::Compute()
     {
       OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
       err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index b50ab64..4ddc4c4 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -233,8 +233,6 @@ namespace
 bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
                                           const TopoDS_Shape& aShape)
 {
-  std::cout << "USING NETGEN2SONLY" << std::endl;
-  exit(0);
   netgen::multithread.terminate = 0;
   //netgen::multithread.task = "Surface meshing";
 
@@ -478,7 +476,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
         OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeom, ngMesh, netgen::mparam, startWith, endWith);
-- 
2.7.4


From 44b64bd58ca780dac2a45bd098f5285d8a5a7be1 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 6 Sep 2016 19:56:42 +0200
Subject: [PATCH 19/25] netgen additions

---
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp     | 12 ++++++------
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp  |  2 +-
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 7b68f42..1c204fc 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2594,7 +2594,7 @@ bool NETGENPlugin_Mesher::Compute()
         // let netgen create a temporary mesh
 
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         netgen::OCCGenerateMesh(intOccgeo, tmpNgMesh, mparams, startWith, endWith);
@@ -2653,7 +2653,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2766,7 +2766,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2871,7 +2871,7 @@ bool NETGENPlugin_Mesher::Compute()
       {
         OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
         err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -2906,7 +2906,7 @@ bool NETGENPlugin_Mesher::Compute()
         {
           OCC_CATCH_SIGNALS;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
           err = netgen::OCCGenerateMesh(occgeo, _ngMesh, mparams, startWith, endWith);
@@ -3131,7 +3131,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
 #if NETGEN_VERSION >=6
-        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+        std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh,  [](netgen::Mesh*){});
         int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
   int err = netgen::OCCGenerateMesh(occgeo, ngMesh, mparams, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index f53751d..dba48fb 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -473,7 +473,7 @@ bool NETGENPlugin_NETGEN_3D::compute(SMESH_Mesh&                     aMesh,
     OCC_CATCH_SIGNALS;
 
 #if NETGEN_VERSION >=6
-    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh);
+    std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh,  [](netgen::Mesh*){});
     err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, netgen::mparam, startWith, endWith);
 #elif NETGEN_VERSION > 4
     ngMesh->CalcLocalH(netgen::mparam.grading);
-- 
2.7.4


From 95ab7e6943771dd4541438037c10ba6143e17752 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 6 Sep 2016 21:13:09 +0200
Subject: [PATCH 20/25] netgen bla

---
 src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 1c204fc..4c9d2fd 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -3120,11 +3120,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
 
   // let netgen create _ngMesh and calculate element size on not meshed shapes
   NETGENPlugin_NetgenLibWrapper ngLib;
-#if NETGEN_VERSION > 5
-  shared_ptr<netgen::Mesh> ngMesh = NULL;
-#else
   netgen::Mesh *ngMesh = NULL;
-#endif
 #if NETGEN_VERSION < 5
   char *optstr = 0;
 #endif
-- 
2.7.4


From fe747402bb179c04ff436ff5b947d9ebaf38bf3d Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Tue, 6 Sep 2016 22:32:31 +0200
Subject: [PATCH 21/25] netgen

---
 src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 4c9d2fd..c9df2d1 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -3138,7 +3138,7 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   if(netgen::multithread.terminate)
     return false;
 
-  ngLib.setMesh(( Ng_Mesh*) ngMesh.get() );
+  ngLib.setMesh(( Ng_Mesh*) ngMesh);
   if (err) {
     if ( SMESH_subMesh* sm = _mesh->GetSubMeshContaining( _shape ))
       sm->GetComputeError().reset( new SMESH_ComputeError( COMPERR_ALGO_FAILED ));
-- 
2.7.4


From 868abccab172390e4e4113df943932d57fd34eb5 Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Wed, 7 Sep 2016 05:49:48 +0200
Subject: [PATCH 22/25] checks

---
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp     | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index c9df2d1..5105a77 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2501,6 +2501,7 @@ bool NETGENPlugin_Mesher::Compute()
     try
     {
       OCC_CATCH_SIGNALS;
+std::cout << "CHECK 1" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2593,6 +2594,7 @@ bool NETGENPlugin_Mesher::Compute()
 
         // let netgen create a temporary mesh
 
+std::cout << "CHECK 2" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2652,6 +2654,8 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
+
+std::cout << "CHECK 3" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2765,6 +2769,8 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
+
+std::cout << "CHECK 4" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
@@ -2870,6 +2876,8 @@ bool NETGENPlugin_Mesher::Compute()
       try
       {
         OCC_CATCH_SIGNALS;
+
+std::cout << "CHECK 5" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2905,6 +2913,8 @@ bool NETGENPlugin_Mesher::Compute()
         try
         {
           OCC_CATCH_SIGNALS;
+
+std::cout << "CHECK 6" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -3126,6 +3136,8 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
 #endif
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
+
+std::cout << "CHECK 6" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh,  [](netgen::Mesh*){});
         int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
-- 
2.7.4


From 45f66a54735ded3da0161ebaa7bc3e0da2505f8c Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Wed, 7 Sep 2016 09:01:45 +0200
Subject: [PATCH 23/25] messages

---
 .../salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp  | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index 4ddc4c4..dd93e6b 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -235,7 +235,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
 {
   netgen::multithread.terminate = 0;
   //netgen::multithread.task = "Surface meshing";
-
+  std::cout << "CHECK_1_2D" << std::endl;
   SMESHDS_Mesh* meshDS = aMesh.GetMeshDS();
   SMESH_MesherHelper helper(aMesh);
   helper.SetElementsOnShape( true );
@@ -274,6 +274,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
   const bool isCommonLocalSize = ( !_hypLengthFromEdges && !_hypMaxElementArea && netgen::mparam.uselocalh );
   const bool isDefaultHyp = ( !_hypLengthFromEdges && !_hypMaxElementArea && !_hypParameters );
 
+  std::cout << "CHECK_1_2D" << std::endl;
   if ( isCommonLocalSize ) // compute common local size in ngMeshes[0]
   {
     //list< SMESH_subMesh* > meshedSM[4]; --> all sub-shapes are added to occgeoComm
@@ -321,6 +322,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
   }
   netgen::mparam.uselocalh = toOptimize; // restore as it is used at surface optimization
 
+  std::cout << "CHECK_2_2D" << std::endl;
   // ==================
   // Loop on all FACEs
   // ==================
@@ -345,6 +347,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
     if ( !proxyMesh )
       continue;
 
+    std::cout << "CHECK_3_2D" << std::endl;
     // ------------------------
     // get all EDGEs of a FACE
     // ------------------------
@@ -368,6 +371,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
       continue;
     }
 
+    std::cout << "CHECK_4_2D" << std::endl;
     // ----------------------
     // compute maxh of a FACE
     // ----------------------
@@ -433,6 +437,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
     // Fill netgen mesh
     // -------------------------
 
+    std::cout << "CHECK_5_2D" << std::endl;
     // MESHCONST_ANALYSE step may lead to a failure, so we make an attempt
     // w/o MESHCONST_ANALYSE at the second loop
     int err = 0;
@@ -475,6 +480,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
       try {
         OCC_CATCH_SIGNALS;
 
+      std::cout << "CHECK_6_2" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
-- 
2.7.4


From 97a5ca2ea9855622d9a4f2b71eb417bcc8033b3e Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Wed, 7 Sep 2016 15:06:23 +0200
Subject: [PATCH 24/25] occ_manual_path

---
 cMake/FindOpenCasCade.cmake | 148 +++++++++++++++++++++++---------------------
 1 file changed, 76 insertions(+), 72 deletions(-)

diff --git a/cMake/FindOpenCasCade.cmake b/cMake/FindOpenCasCade.cmake
index ff46bd5..dc1c38b 100644
--- a/cMake/FindOpenCasCade.cmake
+++ b/cMake/FindOpenCasCade.cmake
@@ -6,80 +6,83 @@
 # OCC_LIBRARY_DIR    - where the OCC library directory can be found
 # OCC_LIBRARIES      - Link this to use OCC
 # OCC_OCAF_LIBRARIES - Link this to use OCC OCAF framework
-set(OCC_FOUND TRUE)
-set(OCC_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include/opencascade)
-set(OCC_LIBRARY_DIR ${CMAKE_INSTALL_PREFIX}/lib)
-set(OCC_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
-set(OCC_OCAF_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
 
+if(DEFINED OCC_MANUAL_PATH)
+  set(OCC_FOUND TRUE)
+  set(OCC_INCLUDE_DIR ${OCC_MANUAL_PATH}/include/opencascade CACHE PATH "system has OCC - OpenCASCADE")
+  set(OCC_LIBRARY_DIR ${OCC_MANUAL_PATH}/lib CACHE PATH "where the OCC include directory can be found")
+  set(OCC_LIBRARIES ${OCC_MANUAL_PATH}/lib CACHE PATH "where the OCC library directory can be found")
+  set(OCC_OCAF_LIBRARIES ${OCC_MANUAL_PATH}/lib CACHE PATH "Link this to use OCC OCAF framework")
 
-# # First try to find OpenCASCADE Community Edition
-# if(NOT DEFINED OCE_DIR)
-#   # Check for OSX needs to come first because UNIX evaluates to true on OSX
-#   if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-#     if(DEFINED MACPORTS_PREFIX)
-#       find_package(OCE QUIET HINTS ${MACPORTS_PREFIX}/Library/Frameworks)
-#     elseif(DEFINED HOMEBREW_PREFIX)
-#       find_package(OCE QUIET HINTS ${HOMEBREW_PREFIX}/Cellar/oce/*)
-#     endif()
-#   elseif(UNIX)
-#     set(OCE_DIR "/usr/local/share/cmake/")
-#   elseif(WIN32)
-#     set(OCE_DIR "c:/OCE-0.4.0/share/cmake")
-#   endif()
-# endif()
+else(DEFINED OCC_MANUAL_PATH)
+  # First try to find OpenCASCADE Community Edition
+  if(NOT DEFINED OCE_DIR)
+    # Check for OSX needs to come first because UNIX evaluates to true on OSX
+    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
+      if(DEFINED MACPORTS_PREFIX)
+        find_package(OCE QUIET HINTS ${MACPORTS_PREFIX}/Library/Frameworks)
+      elseif(DEFINED HOMEBREW_PREFIX)
+        find_package(OCE QUIET HINTS ${HOMEBREW_PREFIX}/Cellar/oce/*)
+      endif()
+    elseif(UNIX)
+      set(OCE_DIR "/usr/local/share/cmake/")
+    elseif(WIN32)
+      set(OCE_DIR "c:/OCE-0.4.0/share/cmake")
+    endif()
+  endif()
 
-# find_package(OCE QUIET)
-# if(OCE_FOUND)
-#   message(STATUS "-- OpenCASCADE Community Edition has been found.")
-#   # Disable this define. For more details see bug #0001872
-#   #add_definitions (-DHAVE_CONFIG_H)
-#   set(OCC_INCLUDE_DIR ${OCE_INCLUDE_DIRS})
-#   #set(OCC_LIBRARY_DIR ${OCE_LIBRARY_DIR})
-# else(OCE_FOUND) #look for OpenCASCADE
-#   if(WIN32)
-#     if(CYGWIN OR MINGW)
-#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-#         /usr/include/opencascade
-#         /usr/local/include/opencascade
-#         /opt/opencascade/include
-#         /opt/opencascade/inc
-#       )
-#       FIND_LIBRARY(OCC_LIBRARY TKernel
-#         /usr/lib
-#         /usr/local/lib
-#         /opt/opencascade/lib
-#       )
-#     else(CYGWIN OR MINGW)
-#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-#         "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/include"
-#       )
-#       FIND_LIBRARY(OCC_LIBRARY TKernel
-#         "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/lib"
-#       )
-#     endif(CYGWIN OR MINGW)
-#   else(WIN32)
-#     FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-#       /usr/include/opencascade
-#       /usr/local/include/opencascade
-#       /opt/opencascade/include
-#       /opt/opencascade/inc
-#     )
-#     FIND_LIBRARY(OCC_LIBRARY TKernel
-#       /usr/lib
-#       /usr/local/lib
-#       /opt/opencascade/lib
-#     )
-#   endif(WIN32)
-#   if(OCC_LIBRARY)
-#     GET_FILENAME_COMPONENT(OCC_LIBRARY_DIR ${OCC_LIBRARY} PATH)
-#     IF(NOT OCC_INCLUDE_DIR)
-#       FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
-#         ${OCC_LIBRARY_DIR}/../inc
-#       )
-#     ENDIF()
-#   endif(OCC_LIBRARY)
-# endif(OCE_FOUND)
+  find_package(OCE QUIET)
+  if(OCE_FOUND)
+    message(STATUS "-- OpenCASCADE Community Edition has been found.")
+    # Disable this define. For more details see bug #0001872
+    #add_definitions (-DHAVE_CONFIG_H)
+    set(OCC_INCLUDE_DIR ${OCE_INCLUDE_DIRS})
+    #set(OCC_LIBRARY_DIR ${OCE_LIBRARY_DIR})
+  else(OCE_FOUND) #look for OpenCASCADE
+    if(WIN32)
+      if(CYGWIN OR MINGW)
+      FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+          /usr/include/opencascade
+          /usr/local/include/opencascade
+          /opt/opencascade/include
+          /opt/opencascade/inc
+        )
+        FIND_LIBRARY(OCC_LIBRARY TKernel
+          /usr/lib
+          /usr/local/lib
+          /opt/opencascade/lib
+        )
+      else(CYGWIN OR MINGW)
+      FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+          "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/include"
+        )
+        FIND_LIBRARY(OCC_LIBRARY TKernel
+          "[HKEY_LOCAL_MACHINE\\SOFTWARE\\SIM\\OCC\\2;Installation Path]/lib"
+        )
+      endif(CYGWIN OR MINGW)
+    else(WIN32)
+      FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+        /usr/include/opencascade
+        /usr/local/include/opencascade
+        /opt/opencascade/include
+        /opt/opencascade/inc
+      )
+      FIND_LIBRARY(OCC_LIBRARY TKernel
+        /usr/lib
+        /usr/local/lib
+        /opt/opencascade/lib
+      )
+    endif(WIN32)
+    if(OCC_LIBRARY)
+      GET_FILENAME_COMPONENT(OCC_LIBRARY_DIR ${OCC_LIBRARY} PATH)
+      IF(NOT OCC_INCLUDE_DIR)
+        FIND_PATH(OCC_INCLUDE_DIR Standard_Version.hxx
+          ${OCC_LIBRARY_DIR}/../inc
+        )
+      ENDIF()
+    endif(OCC_LIBRARY)
+  endif(OCE_FOUND)
+endif(OCC_MANUAL_PATH)
 
 if(OCC_INCLUDE_DIR)
   file(STRINGS ${OCC_INCLUDE_DIR}/Standard_Version.hxx OCC_MAJOR
@@ -96,6 +99,7 @@ if(OCC_INCLUDE_DIR)
   string(REGEX MATCH "[0-9]+" OCC_MAINT ${OCC_MAINT})
 
   set(OCC_VERSION_STRING "${OCC_MAJOR}.${OCC_MINOR}.${OCC_MAINT}")
+
 endif(OCC_INCLUDE_DIR)
 
 # handle the QUIETLY and REQUIRED arguments and set OCC_FOUND to TRUE if
@@ -147,4 +151,4 @@ if(OCC_FOUND)
   message(STATUS "-- OCE/OpenCASCADE shared libraries directory: ${OCC_LIBRARY_DIR}")
 else(OCC_FOUND)
   #message(SEND_ERROR "Neither OpenCASCADE Community Edition nor OpenCasCade were found: will not build CAD modules!")
-endif(OCC_FOUND)
+endif(OCC_FOUND)
\ No newline at end of file
-- 
2.7.4


From 49f43cd61fa95dfbfa6b35e35e6788ef2ec15b7e Mon Sep 17 00:00:00 2001
From: looooo <sppedflyer@gmail.com>
Date: Fri, 9 Sep 2016 16:28:15 +0200
Subject: [PATCH 25/25] cerr

---
 .../src/NETGENPlugin/NETGENPlugin_Mesher.cpp       | 22 +++++++++++++++-------
 .../NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp   |  2 +-
 .../src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp    |  2 ++
 3 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
index 5105a77..8c1cf68 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_Mesher.cpp
@@ -2501,7 +2501,7 @@ bool NETGENPlugin_Mesher::Compute()
     try
     {
       OCC_CATCH_SIGNALS;
-std::cout << "CHECK 1" << std::endl;
+std::cerr << "1. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2594,7 +2594,8 @@ std::cout << "CHECK 1" << std::endl;
 
         // let netgen create a temporary mesh
 
-std::cout << "CHECK 2" << std::endl;
+
+std::cerr << "2. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(tmpNgMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2611,6 +2612,8 @@ std::cout << "CHECK 2" << std::endl;
 
         // compute mesh on internal edges
         startWith = endWith = netgen::MESHCONST_MESHEDGES;
+
+std::cerr << "3. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         err = netgen::OCCGenerateMesh(intOccgeo, mesh_ptr, mparams, startWith, endWith);
 #elif NETGEN_VERSION > 4
@@ -2655,7 +2658,8 @@ std::cout << "CHECK 2" << std::endl;
       {
         OCC_CATCH_SIGNALS;
 
-std::cout << "CHECK 3" << std::endl;
+
+std::cerr << "4. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2770,7 +2774,8 @@ std::cout << "CHECK 3" << std::endl;
       {
         OCC_CATCH_SIGNALS;
 
-std::cout << "CHECK 4" << std::endl;
+
+std::cerr << "5. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo,mesh_ptr, mparams, startWith, endWith);
@@ -2877,7 +2882,8 @@ std::cout << "CHECK 4" << std::endl;
       {
         OCC_CATCH_SIGNALS;
 
-std::cout << "CHECK 5" << std::endl;
+
+std::cerr << "6. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -2914,7 +2920,8 @@ std::cout << "CHECK 5" << std::endl;
         {
           OCC_CATCH_SIGNALS;
 
-std::cout << "CHECK 6" << std::endl;
+
+std::cerr << "7. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(_ngMesh,  [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
@@ -3137,7 +3144,8 @@ bool NETGENPlugin_Mesher::Evaluate(MapShapeNbElems& aResMap)
   int startWith = netgen::MESHCONST_ANALYSE;
   int endWith   = netgen::MESHCONST_MESHEDGES;
 
-std::cout << "CHECK 6" << std::endl;
+
+std::cerr << "8. impl of OCCGenerateMesh in mesher" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh,  [](netgen::Mesh*){});
         int err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, mparams, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
index dd93e6b..9ee29fc 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_2D_ONLY.cpp
@@ -480,7 +480,7 @@ bool NETGENPlugin_NETGEN_2D_ONLY::Compute(SMESH_Mesh&         aMesh,
       try {
         OCC_CATCH_SIGNALS;
 
-      std::cout << "CHECK_6_2" << std::endl;
+std::cerr << "1. impl of OCCGenerateMesh in 2D" << std::endl;
 #if NETGEN_VERSION >=6
         std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh, [](netgen::Mesh*){});
         err = netgen::OCCGenerateMesh(occgeom, mesh_ptr, netgen::mparam, startWith, endWith);
diff --git a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
index dba48fb..687a0a8 100644
--- a/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
+++ b/src/3rdParty/salomesmesh/src/NETGENPlugin/NETGENPlugin_NETGEN_3D.cpp
@@ -472,6 +472,8 @@ bool NETGENPlugin_NETGEN_3D::compute(SMESH_Mesh&                     aMesh,
   {
     OCC_CATCH_SIGNALS;
 
+
+std::cerr << "1. impl of OCCGenerateMesh in 3d" << std::endl;
 #if NETGEN_VERSION >=6
     std::shared_ptr<netgen::Mesh> mesh_ptr(ngMesh,  [](netgen::Mesh*){});
     err = netgen::OCCGenerateMesh(occgeo, mesh_ptr, netgen::mparam, startWith, endWith);
-- 
2.7.4

