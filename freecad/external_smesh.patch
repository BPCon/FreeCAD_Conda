diff --git a/CMakeLists.txt b/CMakeLists.txt
index a6441b3..416ebca 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -648,6 +648,9 @@ endif()
 
     # Salome SMESH sources are under src/3rdParty now
     IF(BUILD_SMESH)
+        # set the internal smesh version:
+        set(SMESH_VERSION_MAJOR 5)  # in src/3rdParty it says smesh is version 5.*, is this true?
+
         #if we use smesh we definitely also need vtk, no matter of external or internal smesh
         set (VTK_COMPONENTS
             vtkCommonCore
@@ -734,8 +737,14 @@ endif()
             endif()
             find_package(MEDFile REQUIRED)
             set(SMESH_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/src/3rdParty/salomesmesh/inc)
-        else()
-            find_package(SMESH)
+
+        else(NOT FREECAD_USE_EXTERNAL_SMESH)
+            find_package(SMESH CONFIG)
+            include_directories(${SMESH_INCLUDE_DIR})
+            link_directories(${SMESH_LIB_PATH})
+            SET(EXTERNAL_SMESH_LIBS ${SMESH_LIBRARIES})
+            add_definitions(-DHAVE_NETGEN)
+            add_definitions(-DSMESH_VERSION_MAJOR=${SMESH_VERSION_MAJOR})
             if(NOT SMESH_FOUND)
                 message(ERROR "================\n"
                               "SMESH not found.\n"
diff --git a/src/Mod/Fem/App/AppFem.cpp b/src/Mod/Fem/App/AppFem.cpp
index e4d7acc..297d794 100644
--- a/src/Mod/Fem/App/AppFem.cpp
+++ b/src/Mod/Fem/App/AppFem.cpp
@@ -119,7 +119,9 @@ PyMOD_INIT_FUNC(Fem)
     Fem::StdMeshers_SegmentAroundVertex_0DPy    ::init_type(femModule);
     Fem::StdMeshers_SegmentLengthAroundVertexPy ::init_type(femModule);
     Fem::StdMeshers_StartEndLengthPy            ::init_type(femModule);
+#if SMESH_VERSION_MAJOR < 7
     Fem::StdMeshers_TrianglePreferencePy        ::init_type(femModule);
+#endif
     Fem::StdMeshers_Hexa_3DPy                   ::init_type(femModule);
 
     // Add Types to module
diff --git a/src/Mod/Fem/App/AppFemPy.cpp b/src/Mod/Fem/App/AppFemPy.cpp
index 47554fa..7a05bce 100644
--- a/src/Mod/Fem/App/AppFemPy.cpp
+++ b/src/Mod/Fem/App/AppFemPy.cpp
@@ -50,7 +50,9 @@
 #include <StdMeshers_LocalLength.hxx>
 #include <StdMeshers_NumberOfSegments.hxx>
 #include <StdMeshers_AutomaticLength.hxx>
-#include <StdMeshers_TrianglePreference.hxx>
+#if SMESH_VERSION_MAJOR < 7
+    #include <StdMeshers_TrianglePreference.hxx>
+#endif
 #include <StdMeshers_MEFISTO_2D.hxx>
 #include <StdMeshers_Deflection1D.hxx>
 #include <StdMeshers_MaxElementArea.hxx>
diff --git a/src/Mod/Fem/App/CMakeLists.txt b/src/Mod/Fem/App/CMakeLists.txt
index b69fad6..cd4bba8 100644
--- a/src/Mod/Fem/App/CMakeLists.txt
+++ b/src/Mod/Fem/App/CMakeLists.txt
@@ -181,7 +181,7 @@ SET(Fem_SRCS
 
 
 add_library(Fem SHARED ${Fem_SRCS})
-target_link_libraries(Fem ${Fem_LIBS} ${VTK_LIBRARIES})
+target_link_libraries(Fem ${Fem_LIBS} ${VTK_LIBRARIES} ${EXTERNAL_SMESH_LIBS})
 
 
 SET_BIN_DIR(Fem Fem /Mod/Fem)
diff --git a/src/Mod/Fem/App/FemMesh.cpp b/src/Mod/Fem/App/FemMesh.cpp
index c53083c..3ff5bb3 100644
--- a/src/Mod/Fem/App/FemMesh.cpp
+++ b/src/Mod/Fem/App/FemMesh.cpp
@@ -61,6 +61,7 @@
 #include <SMDS_MeshGroup.hxx>
 #include <SMESHDS_GroupBase.hxx>
 #include <SMESHDS_Group.hxx>
+#include <SMESHDS_Mesh.hxx>
 #include <SMDS_PolyhedralVolumeOfNodes.hxx>
 #include <SMDS_VolumeTool.hxx>
 #include <StdMeshers_MaxLength.hxx>
@@ -89,6 +90,9 @@ using namespace Base;
 using namespace boost;
 
 static int StatCount = 0;
+#if SMESH_VERSION_MAJOR >= 7
+    SMESH_Gen* FemMesh::_mesh_gen = 0;
+#endif
 
 TYPESYSTEM_SOURCE(Fem::FemMesh , Base::Persistence);
 
@@ -489,7 +493,13 @@ SMESH_Mesh* FemMesh::getSMesh()
 
 SMESH_Gen * FemMesh::getGenerator()
 {
+#if SMESH_VERSION_MAJOR < 7
     return SMESH_Gen::get();
+#else
+    if (! FemMesh::_mesh_gen)
+        FemMesh::_mesh_gen = new SMESH_Gen();
+    return FemMesh::_mesh_gen;
+#endif
 }
 
 void FemMesh::addHypothesis(const TopoDS_Shape & aSubShape, SMESH_HypothesisPtr hyp)
@@ -1155,11 +1165,13 @@ void FemMesh::read(const char *FileName)
         // read brep-file
         myMesh->STLToMesh(File.filePath().c_str());
     }
+#if SMESH_VERSION_MAJOR < 7
     else if (File.hasExtension("dat") ) {
         // read brep-file
     // vejmarie disable
         myMesh->DATToMesh(File.filePath().c_str());
     }
+#endif
     else if (File.hasExtension("bdf") ) {
         // read Nastran-file
         readNastran(File.filePath());
diff --git a/src/Mod/Fem/App/FemMesh.h b/src/Mod/Fem/App/FemMesh.h
index dfe2a71..e335e9c 100644
--- a/src/Mod/Fem/App/FemMesh.h
+++ b/src/Mod/Fem/App/FemMesh.h
@@ -160,6 +160,9 @@ private:
     SMESH_Mesh *myMesh;
 
     std::list<SMESH_HypothesisPtr> hypoth;
+#if SMESH_VERSION_MAJOR >= 7
+    static SMESH_Gen *_mesh_gen;
+#endif
 };
 
 } //namespace Part
diff --git a/src/Mod/Fem/App/FemMeshPyImp.cpp b/src/Mod/Fem/App/FemMeshPyImp.cpp
index 695ed53..70fc732 100644
--- a/src/Mod/Fem/App/FemMeshPyImp.cpp
+++ b/src/Mod/Fem/App/FemMeshPyImp.cpp
@@ -37,6 +37,9 @@
 #include <SMDSAbs_ElementType.hxx>
 #include <SMDS_MeshElement.hxx>
 #include <SMDS_VolumeTool.hxx>
+#if SMESH_VERSION_MAJOR >= 7
+    #include <SMESHDS_Mesh.hxx>
+#endif
 
 #include <TopoDS_Shape.hxx>
 #include <TopoDS_Face.hxx>
diff --git a/src/Mod/Fem/App/FemMeshShapeNetgenObject.cpp b/src/Mod/Fem/App/FemMeshShapeNetgenObject.cpp
index 95d5a0e..a30b677 100644
--- a/src/Mod/Fem/App/FemMeshShapeNetgenObject.cpp
+++ b/src/Mod/Fem/App/FemMeshShapeNetgenObject.cpp
@@ -34,6 +34,9 @@
 #include <Base/Console.h>
 
 #include <SMESH_Gen.hxx>
+#if SMESH_VERSION_MAJOR >= 7
+    #include <SMESHDS_Mesh.hxx>
+#endif
 
 #include <SMESH_Mesh.hxx>
 #include <SMDS_PolyhedralVolumeOfNodes.hxx>
diff --git a/src/Mod/Fem/App/FemMeshShapeObject.cpp b/src/Mod/Fem/App/FemMeshShapeObject.cpp
index ac0c3b6..a2c690f 100644
--- a/src/Mod/Fem/App/FemMeshShapeObject.cpp
+++ b/src/Mod/Fem/App/FemMeshShapeObject.cpp
@@ -61,7 +61,9 @@
 #include <StdMeshers_QuadraticMesh.hxx>
 #include <StdMeshers_RadialPrism_3D.hxx>
 #include <StdMeshers_SegmentAroundVertex_0D.hxx>
-#include <StdMeshers_TrianglePreference.hxx>
+#if SMESH_VERSION_MAJOR < 7
+    #include <StdMeshers_TrianglePreference.hxx>
+#endif
 #include <StdMeshers_ProjectionSource1D.hxx>
 #include <StdMeshers_ProjectionSource2D.hxx>
 #include <StdMeshers_ProjectionSource3D.hxx>
diff --git a/src/Mod/Fem/App/FemVTKTools.cpp b/src/Mod/Fem/App/FemVTKTools.cpp
index 40fa073..1e8286e 100644
--- a/src/Mod/Fem/App/FemVTKTools.cpp
+++ b/src/Mod/Fem/App/FemVTKTools.cpp
@@ -53,6 +53,9 @@
 #include <SMESH_Mesh.hxx>
 #include <SMDS_PolyhedralVolumeOfNodes.hxx>
 #include <SMDS_VolumeTool.hxx>
+#if SMESH_VERSION_MAJOR >= 7
+    #include <SMESHDS_Mesh.hxx>
+#endif
 
 # include <TopoDS_Face.hxx>
 # include <TopoDS_Solid.hxx>
diff --git a/src/Mod/Fem/App/HypothesisPy.cpp b/src/Mod/Fem/App/HypothesisPy.cpp
index 44babab..99f90cd 100755
--- a/src/Mod/Fem/App/HypothesisPy.cpp
+++ b/src/Mod/Fem/App/HypothesisPy.cpp
@@ -53,7 +53,9 @@
 #include <StdMeshers_QuadraticMesh.hxx>
 #include <StdMeshers_RadialPrism_3D.hxx>
 #include <StdMeshers_SegmentAroundVertex_0D.hxx>
-#include <StdMeshers_TrianglePreference.hxx>
+#if SMESH_VERSION_MAJOR < 7
+    #include <StdMeshers_TrianglePreference.hxx>
+#endif
 #include <StdMeshers_ProjectionSource1D.hxx>
 #include <StdMeshers_ProjectionSource2D.hxx>
 #include <StdMeshers_ProjectionSource3D.hxx>
@@ -87,11 +89,13 @@ void SMESH_HypothesisPy<T>::init_type(PyObject* module)
 
     SMESH_HypothesisPy::add_varargs_method("setLibName", &SMESH_HypothesisPy<T>::setLibName, "setLibName(String)");
     SMESH_HypothesisPy::add_varargs_method("getLibName", &SMESH_HypothesisPy<T>::getLibName, "String getLibName()");
+#if SMESH_VERSION_MAJOR < 7
     SMESH_HypothesisPy::add_varargs_method("setParameters", &SMESH_HypothesisPy<T>::setParameters, "setParameters(String)");
     SMESH_HypothesisPy::add_varargs_method("getParameters", &SMESH_HypothesisPy<T>::getParameters, "String getParameters()");
     SMESH_HypothesisPy::add_varargs_method("setLastParameters", &SMESH_HypothesisPy<T>::setLastParameters, "setLastParameters(String)");
     SMESH_HypothesisPy::add_varargs_method("getLastParameters", &SMESH_HypothesisPy<T>::getLastParameters, "String getLastParameters()");
     SMESH_HypothesisPy::add_varargs_method("clearParameters", &SMESH_HypothesisPy<T>::clearParameters, "clearParameters()");
+#endif
     SMESH_HypothesisPy::add_varargs_method("isAuxiliary", &SMESH_HypothesisPy<T>::isAuxiliary, "Bool isAuxiliary()");
     SMESH_HypothesisPy::add_varargs_method("setParametersByMesh", &SMESH_HypothesisPy<T>::setParametersByMesh, "setParametersByMesh(Mesh,Shape)");
     Base::Interpreter().addType(SMESH_HypothesisPy<T>::behaviors().type_object(),
@@ -140,6 +144,8 @@ Py::Object SMESH_HypothesisPy<T>::getLibName(const Py::Tuple& args)
     return Py::String(hypothesis<SMESH_Hypothesis>()->GetLibName());
 }
 
+
+#if SMESH_VERSION_MAJOR < 7 //////////////////////////////////////////////////////////
 template<class T>
 Py::Object SMESH_HypothesisPy<T>::setParameters(const Py::Tuple& args)
 {
@@ -182,6 +188,7 @@ Py::Object SMESH_HypothesisPy<T>::clearParameters(const Py::Tuple& args)
     hypothesis<SMESH_Hypothesis>()->ClearParameters();
     return Py::None();
 }
+#endif //////////////////////////////////////////////////////////////////////////
 
 template<class T>
 Py::Object SMESH_HypothesisPy<T>::setParametersByMesh(const Py::Tuple& args)
@@ -646,6 +653,7 @@ StdMeshers_Hexa_3DPy::~StdMeshers_Hexa_3DPy()
 
 // ----------------------------------------------------------------------------
 
+#if SMESH_VERSION_MAJOR < 7 ///////////////////////////////////////////////////////////
 void StdMeshers_TrianglePreferencePy::init_type(PyObject* module)
 {
     behaviors().name("StdMeshers_TrianglePreference");
@@ -661,6 +669,7 @@ StdMeshers_TrianglePreferencePy::StdMeshers_TrianglePreferencePy(int hypId, int
 StdMeshers_TrianglePreferencePy::~StdMeshers_TrianglePreferencePy()
 {
 }
+#endif ///////////////////////////////////////////////////////////////////////////
 
 // ----------------------------------------------------------------------------
 
diff --git a/src/Mod/Fem/App/HypothesisPy.h b/src/Mod/Fem/App/HypothesisPy.h
index 8c1cde7..ed8db84 100755
--- a/src/Mod/Fem/App/HypothesisPy.h
+++ b/src/Mod/Fem/App/HypothesisPy.h
@@ -60,11 +60,13 @@ public:
     Py::Object repr();
     Py::Object getLibName(const Py::Tuple& args);
     Py::Object setLibName(const Py::Tuple& args);
+#ifndef EXTERNAL_SMESH
     Py::Object setParameters(const Py::Tuple& args);
     Py::Object getParameters(const Py::Tuple& args);
     Py::Object setLastParameters(const Py::Tuple& args);
     Py::Object getLastParameters(const Py::Tuple& args);
     Py::Object clearParameters(const Py::Tuple& args);
+#endif
     Py::Object isAuxiliary(const Py::Tuple& args);
     Py::Object setParametersByMesh(const Py::Tuple& args);
 
@@ -219,7 +221,7 @@ public:
     StdMeshers_Hexa_3DPy(int hypId, int studyId, SMESH_Gen* gen);
     ~StdMeshers_Hexa_3DPy();
 };
-
+#if SMESH_VERSION_MAJOR < 7 ///////////////////////////////////////////////////////////////////////////////
 class StdMeshers_TrianglePreferencePy : public SMESH_HypothesisPy<StdMeshers_TrianglePreferencePy>
 {
 public:
@@ -227,6 +229,7 @@ public:
     StdMeshers_TrianglePreferencePy(int hypId, int studyId, SMESH_Gen* gen);
     ~StdMeshers_TrianglePreferencePy();
 };
+#endif ///////////////////////////////////////////////////////////////////////////////////////////////
 
 class StdMeshers_StartEndLengthPy : public SMESH_HypothesisPy<StdMeshers_StartEndLengthPy>
 {
diff --git a/src/Mod/MeshPart/App/CMakeLists.txt b/src/Mod/MeshPart/App/CMakeLists.txt
index 68ed18a..6c644e9 100644
--- a/src/Mod/MeshPart/App/CMakeLists.txt
+++ b/src/Mod/MeshPart/App/CMakeLists.txt
@@ -67,7 +67,7 @@ SET(MeshPart_SRCS
 )
 
 add_library(MeshPart SHARED ${MeshPart_SRCS})
-target_link_libraries(MeshPart ${MeshPart_LIBS})
+target_link_libraries(MeshPart ${MeshPart_LIBS} ${EXTERNAL_SMESH_LIBS})
 
 
 fc_target_copy_resource(MeshPart 
diff --git a/src/Mod/MeshPart/App/Mesher.cpp b/src/Mod/MeshPart/App/Mesher.cpp
index 5c181ca..a8bdbfa 100644
--- a/src/Mod/MeshPart/App/Mesher.cpp
+++ b/src/Mod/MeshPart/App/Mesher.cpp
@@ -42,10 +42,17 @@
 #endif
 #include <SMESH_Gen.hxx>
 #include <StdMeshers_MaxLength.hxx>
+
+#if SMESH_VERSION_MAJOR >= 7
+    #include <SMESH_Mesh.hxx>
+    #include <SMESHDS_Mesh.hxx>
+#else
+    #include <StdMeshers_TrianglePreference.hxx>
+#endif
+
 #include <StdMeshers_LocalLength.hxx>
 #include <StdMeshers_NumberOfSegments.hxx>
 #include <StdMeshers_AutomaticLength.hxx>
-#include <StdMeshers_TrianglePreference.hxx>
 #include <StdMeshers_MEFISTO_2D.hxx>
 #include <StdMeshers_Deflection1D.hxx>
 #include <StdMeshers_Arithmetic1D.hxx>
@@ -68,6 +75,11 @@
 
 using namespace MeshPart;
 
+#if SMESH_VERSION_MAJOR >= 7
+    SMESH_Gen* Mesher::_mesh_gen = 0;
+#endif
+
+
 MeshingOutput::MeshingOutput() 
 {
     buffer.reserve(80);
@@ -311,8 +323,17 @@ Mesh::MeshObject* Mesher::createMesh() const
 #else
     std::list<SMESH_Hypothesis*> hypoth;
 
+#if SMESH_VERSION_MAJOR < 7
     SMESH_Gen* meshgen = SMESH_Gen::get();
+#else
+    if (! Mesher::_mesh_gen)
+        Mesher::_mesh_gen = new SMESH_Gen();
+    SMESH_Gen* meshgen = Mesher::_mesh_gen;
+#endif
+
     SMESH_Mesh* mesh = meshgen->CreateMesh(0, true);
+
+
     int hyp=0;
 
     switch (method) {
@@ -385,9 +406,10 @@ Mesh::MeshObject* Mesher::createMesh() const
             StdMeshers_Regular_1D* hyp1d = new StdMeshers_Regular_1D(hyp++,0,meshgen);
             hypoth.push_back(hyp1d);
         }
-
+#if SMESH_VERSION_MAJOR < 7
         StdMeshers_TrianglePreference* hyp2d_1 = new StdMeshers_TrianglePreference(hyp++,0,meshgen);
         hypoth.push_back(hyp2d_1);
+#endif
         StdMeshers_MEFISTO_2D* alg2d = new StdMeshers_MEFISTO_2D(hyp++,0,meshgen);
         hypoth.push_back(alg2d);
     } break;
diff --git a/src/Mod/MeshPart/App/Mesher.h b/src/Mod/MeshPart/App/Mesher.h
index 93d70e3..079454a 100644
--- a/src/Mod/MeshPart/App/Mesher.h
+++ b/src/Mod/MeshPart/App/Mesher.h
@@ -27,6 +27,7 @@
 #include <Base/Stream.h>
 
 class TopoDS_Shape;
+class SMESH_Gen;
 
 namespace Mesh { class MeshObject; }
 namespace MeshPart {
@@ -152,6 +153,10 @@ private:
 #endif
     std::vector<uint32_t> colors;
     struct Vertex;
+
+#if SMESH_VERSION_MAJOR >= 7
+    static SMESH_Gen *_mesh_gen;
+#endif
 };
 
 class MeshingOutput : public std::streambuf
