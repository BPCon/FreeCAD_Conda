diff --git a/CMakeLists.txt b/CMakeLists.txt
index ea464e5..29acbed 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -29,8 +29,16 @@ set(solvespace_VERSION_MAJOR 2)
 set(solvespace_VERSION_MINOR 3)
 string(SUBSTRING "${GIT_COMMIT_HASH}" 0 8 solvespace_GIT_HASH)
 
-if(NOT WIN32 AND NOT APPLE)
-    set(GUI gtk2 CACHE STRING "GUI toolkit to use (one of: gtk2 gtk3)")
+
+set(ENABLE_GUI OFF CACHE BOOL
+    "Whether the graphical interface is enabled (command line interface always is)")
+set(ENABLE_DXFRW OFF CACHE BOOL
+    "build with dxfrw")
+
+if (ENABLE_GUI)
+    if(NOT WIN32 AND NOT APPLE)
+        set(GUI gtk2 CACHE STRING "GUI toolkit to use (one of: gtk2 gtk3)")
+    endif()
 endif()
 
 # compiler
@@ -92,11 +100,13 @@ if(SANITIZE)
 endif()
 
 # dependencies
-
 find_package(OpenGL REQUIRED)
 
-message(STATUS "Using in-tree libdxfrw")
-add_subdirectory(extlib/libdxfrw)
+
+if(ENABLE_DXFRW)
+    message(STATUS "Using in-tree libdxfrw")
+    add_subdirectory(extlib/libdxfrw)
+endif()
 
 if(WIN32)
     # Configure Freetype first. If done later, it will notice that
@@ -151,12 +161,14 @@ if(WIN32)
     endif()
 
     if(NOT MINGW)
-        message(STATUS "Using prebuilt SpaceWare")
-        set(SPACEWARE_FOUND TRUE)
-        set(SPACEWARE_INCLUDE_DIR
-            "${CMAKE_SOURCE_DIR}/extlib/si")
-        set(SPACEWARE_LIBRARIES
-            "${CMAKE_SOURCE_DIR}/extlib/si/siapp.lib")
+        if(ENABLE_GUI)
+            message(STATUS "Using prebuilt SpaceWare")
+            set(SPACEWARE_FOUND TRUE)
+            set(SPACEWARE_INCLUDE_DIR
+                "${CMAKE_SOURCE_DIR}/extlib/si")
+            set(SPACEWARE_LIBRARIES
+                "${CMAKE_SOURCE_DIR}/extlib/si/siapp.lib")
+        endif()
     endif()
 elseif(APPLE)
     set(CMAKE_FIND_FRAMEWORK LAST)
@@ -165,7 +177,6 @@ elseif(APPLE)
     find_package(Freetype REQUIRED)
     find_library(APPKIT_LIBRARY AppKit REQUIRED)
 else() # Linux and compatible systems
-    find_package(SpaceWare)
 
     # Use freedesktop's pkg-config to locate everything.
     find_package(PkgConfig REQUIRED)
@@ -173,18 +184,23 @@ else() # Linux and compatible systems
     pkg_check_modules(PNG REQUIRED libpng)
     pkg_check_modules(FONTCONFIG REQUIRED fontconfig)
     pkg_check_modules(JSONC REQUIRED json-c)
-    pkg_check_modules(GLEW REQUIRED glew)
     pkg_check_modules(FREETYPE REQUIRED freetype2)
 
-    set(HAVE_GTK TRUE)
-    if(GUI STREQUAL "gtk3")
-        set(HAVE_GTK3 TRUE)
-        pkg_check_modules(GTKMM REQUIRED gtkmm-3.0 pangomm-1.4 x11)
-    elseif(GUI STREQUAL "gtk2")
-        set(HAVE_GTK2 TRUE)
-        pkg_check_modules(GTKMM REQUIRED gtkmm-2.4 pangomm-1.4 x11)
+    if(ENABLE_GUI)
+        pkg_check_modules(GLEW REQUIRED glew)
+        find_package(SpaceWare)
+        set(HAVE_GTK TRUE)
+        if(GUI STREQUAL "gtk3")
+            set(HAVE_GTK3 TRUE)
+            pkg_check_modules(GTKMM REQUIRED gtkmm-3.0 pangomm-1.4 x11)
+        elseif(GUI STREQUAL "gtk2")
+            set(HAVE_GTK2 TRUE)
+            pkg_check_modules(GTKMM REQUIRED gtkmm-2.4 pangomm-1.4 x11)
+        else()
+            message(FATAL_ERROR "GUI unrecognized: ${GUI}")
+        endif()
     else()
-        message(FATAL_ERROR "GUI unrecognized: ${GUI}")
+        set(HAVE_GTK OFF)
     endif()
 endif()
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1978b7e..1721f22 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -348,34 +348,35 @@ set(solvespace_SOURCES
     srf/surfinter.cpp
     srf/triangulate.cpp)
 
-add_executable(solvespace WIN32 MACOSX_BUNDLE
-    ${libslvs_HEADERS}
-    ${libslvs_SOURCES}
-    ${util_SOURCES}
-    ${platform_SOURCES}
-    ${platform_BUNDLED_RESOURCES}
-    ${generated_SOURCES}
-    ${generated_HEADERS}
-    ${solvespace_HEADERS}
-    ${solvespace_SOURCES})
-
-target_link_libraries(solvespace
-    dxfrw
-    ${OPENGL_LIBRARIES}
-    ${PNG_LIBRARIES}
-    ${ZLIB_LIBRARIES}
-    ${FREETYPE_LIBRARIES}
-    ${platform_LIBRARIES})
-
-if(WIN32 AND NOT MINGW)
-    set_target_properties(solvespace PROPERTIES
-        LINK_FLAGS "/MANIFEST:NO /SAFESEH:NO")
-endif()
+if(ENABLE_GUI)
+    add_executable(solvespace WIN32 MACOSX_BUNDLE
+        ${libslvs_HEADERS}
+        ${libslvs_SOURCES}
+        ${util_SOURCES}
+        ${platform_SOURCES}
+        ${platform_BUNDLED_RESOURCES}
+        ${generated_SOURCES}
+        ${generated_HEADERS}
+        ${solvespace_HEADERS}
+        ${solvespace_SOURCES})
 
-if(SPACEWARE_FOUND)
     target_link_libraries(solvespace
-        ${SPACEWARE_LIBRARIES})
-endif()
+        dxfrw
+        ${OPENGL_LIBRARIES}
+        ${PNG_LIBRARIES}
+        ${ZLIB_LIBRARIES}
+        ${FREETYPE_LIBRARIES}
+        ${platform_LIBRARIES})
+
+    if(WIN32 AND NOT MINGW)
+        set_target_properties(solvespace PROPERTIES
+            LINK_FLAGS "/MANIFEST:NO /SAFESEH:NO")
+    endif()
+
+    if(SPACEWARE_FOUND)
+        target_link_libraries(solvespace
+            ${SPACEWARE_LIBRARIES})
+    endif()
 
 if(APPLE)
     set(fixups)
@@ -444,4 +445,7 @@ add_custom_target(solvespace-valgrind
         --free-fill=0xde
         $<TARGET_FILE:solvespace>)
 
+endif()
+
 add_subdirectory(swig)
+
